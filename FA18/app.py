from flask import Flask, flash, redirect, render_template, request, session, abort
import all
import to_json

app = Flask(__name__)


# default starting page
@app.route("/")
def init():
    return render_template('layout_main.html')


# visualization page
@app.route("/network/", methods=['POST'])
def generate():
    pre_graph = request.form.get('graph')
    topic_name = request.form.get('topicName')
    direction = request.form.get('direction')

    downstream = True if direction == "downstream" else False
    if direction == None:
        direction = "downstream"

    if pre_graph == 'linalg':
        topic_name = 'Linear algebra'
        network_json = {'nodes': [{'name': 'René Descartes', 'cluster': 13, 'inlinks': 2}, {'name': 'Skew-Hermitian matrix', 'inlinks': 2}, {'name': 'Relative change and difference', 'inlinks': 1}, {'name': 'Butcher group', 'inlinks': 1}, {'name': 'Shanks transformation', 'inlinks': 3}, {'name': 'Shear matrix', 'inlinks': 1}, {'name': 'Chebyshev nodes', 'inlinks': 1}, {'name': 'Row and column spaces', 'inlinks': 2}, {'name': 'Dot product', 'inlinks': 1}, {'name': 'Non-negative matrix factorization', 'inlinks': 1}, {'name': 'Runge–Kutta methods', 'inlinks': 1}, {'name': 'Transpose of a linear map', 'inlinks': 1}, {'name': 'Identifiability analysis', 'inlinks': 3}, {'name': 'Padé table', 'inlinks': 3}, {'name': 'Vectorization (mathematics)', 'inlinks': 1}, {'name': 'Frame (linear algebra)', 'inlinks': 1}, {'name': 'Discrete Fourier transform', 'inlinks': 1}, {'name': 'Sesquilinear form', 'inlinks': 1}, {'name': 'Signal-flow graph', 'inlinks': 2}, {'name': 'Line segment', 'inlinks': 1}, {'name': 'Matrix norm', 'inlinks': 1}, {'name': 'Savitzky–Golay filter', 'inlinks': 2}, {'name': "Horner's method", 'inlinks': 3}, {'name': 'Overlap–save method', 'inlinks': 1}, {'name': 'Trace (linear algebra)', 'inlinks': 1}, {'name': "Wilkinson's polynomial", 'inlinks': 2}, {'name': 'Dual norm', 'inlinks': 1}, {'name': 'Canonical basis', 'inlinks': 1}, {'name': 'Eigenvalues and eigenvectors', 'inlinks': 2}, {'name': 'Row and column vectors', 'inlinks': 1}, {'name': 'Convex cone', 'inlinks': 1}, {'name': 'Majorization', 'inlinks': 1}, {'name': 'Seven-dimensional cross product', 'inlinks': 1}, {'name': 'Projection (linear algebra)', 'inlinks': 1}, {'name': 'Spectral theory', 'inlinks': 1}, {'name': 'Discrete wavelet transform', 'inlinks': 2}, {'name': "Pohlke's theorem", 'inlinks': 1}, {'name': 'Permanent (mathematics)', 'inlinks': 2}, {'name': 'Compressed sensing', 'inlinks': 1}, {'name': 'Linear inequality', 'inlinks': 3}, {'name': 'Matrix analysis', 'inlinks': 5}, {'name': 'Rank factorization', 'inlinks': 1}, {'name': 'Monte Carlo method', 'inlinks': 1}, {'name': 'Cauchy–Schwarz inequality', 'inlinks': 2}, {'name': "Weyl's inequality", 'inlinks': 1}, {'name': 'Generalizations of Pauli matrices', 'inlinks': 1}, {'name': 'Matrix addition', 'inlinks': 1}, {'name': 'Spectral theorem', 'inlinks': 3}, {'name': 'Quadruple product', 'inlinks': 3}, {'name': 'Translation of axes', 'inlinks': 2}, {'name': 'Euclidean vector', 'inlinks': 5}, {'name': 'Linear algebra', 'inlinks': 1}, {'name': 'Matrix calculus', 'inlinks': 1}, {'name': 'Vector-valued function', 'inlinks': 3}, {'name': 'Kernel (algebra)', 'inlinks': 1}], 'edges': [{'id': 0, 'source': 51, 'target': 25, 'iters': 2}, {'id': 1, 'source': 25, 'target': 2, 'iters': 1}, {'id': 2, 'source': 2, 'target': 38, 'iters': 1}, {'id': 3, 'source': 38, 'target': 29, 'iters': 1}, {'id': 4, 'source': 29, 'target': 1, 'iters': 1}, {'id': 5, 'source': 1, 'target': 40, 'iters': 2}, {'id': 6, 'source': 40, 'target': 39, 'iters': 1}, {'id': 7, 'source': 39, 'target': 21, 'iters': 1}, {'id': 8, 'source': 21, 'target': 22, 'iters': 1}, {'id': 9, 'source': 25, 'target': 43, 'iters': 1}, {'id': 10, 'source': 43, 'target': 15, 'iters': 1}, {'id': 11, 'source': 15, 'target': 16, 'iters': 1}, {'id': 12, 'source': 16, 'target': 7, 'iters': 1}, {'id': 13, 'source': 7, 'target': 47, 'iters': 1}, {'id': 14, 'source': 47, 'target': 40, 'iters': 1}, {'id': 15, 'source': 40, 'target': 9, 'iters': 1}, {'id': 16, 'source': 9, 'target': 44, 'iters': 1}, {'id': 17, 'source': 51, 'target': 50, 'iters': 1}, {'id': 18, 'source': 50, 'target': 35, 'iters': 1}, {'id': 19, 'source': 35, 'target': 53, 'iters': 1}, {'id': 20, 'source': 53, 'target': 52, 'iters': 1}, {'id': 21, 'source': 52, 'target': 4, 'iters': 1}, {'id': 22, 'source': 4, 'target': 13, 'iters': 1}, {'id': 23, 'source': 13, 'target': 4, 'iters': 1}, {'id': 24, 'source': 4, 'target': 0, 'iters': 1}, {'id': 25, 'source': 0, 'target': 43, 'iters': 1}, {'id': 26, 'source': 51, 'target': 34, 'iters': 1}, {'id': 27, 'source': 34, 'target': 45, 'iters': 1}, {'id': 28, 'source': 45, 'target': 50, 'iters': 1}, {'id': 29, 'source': 50, 'target': 27, 'iters': 1}, {'id': 30, 'source': 27, 'target': 41, 'iters': 1}, {'id': 31, 'source': 41, 'target': 10, 'iters': 1}, {'id': 32, 'source': 10, 'target': 12, 'iters': 1}, {'id': 33, 'source': 12, 'target': 13, 'iters': 1}, {'id': 34, 'source': 13, 'target': 50, 'iters': 1}, {'id': 35, 'source': 51, 'target': 31, 'iters': 1}, {'id': 36, 'source': 31, 'target': 48, 'iters': 1}, {'id': 37, 'source': 48, 'target': 19, 'iters': 1}, {'id': 38, 'source': 19, 'target': 1, 'iters': 1}, {'id': 39, 'source': 40, 'target': 37, 'iters': 1}, {'id': 40, 'source': 37, 'target': 28, 'iters': 1}, {'id': 41, 'source': 28, 'target': 17, 'iters': 1}, {'id': 42, 'source': 17, 'target': 28, 'iters': 1}, {'id': 43, 'source': 51, 'target': 24, 'iters': 1}, {'id': 44, 'source': 24, 'target': 22, 'iters': 1}, {'id': 45, 'source': 22, 'target': 42, 'iters': 1}, {'id': 46, 'source': 42, 'target': 46, 'iters': 1}, {'id': 47, 'source': 46, 'target': 51, 'iters': 1}, {'id': 48, 'source': 51, 'target': 39, 'iters': 1}, {'id': 49, 'source': 39, 'target': 37, 'iters': 1}, {'id': 50, 'source': 37, 'target': 50, 'iters': 1}, {'id': 51, 'source': 50, 'target': 47, 'iters': 1}, {'id': 52, 'source': 51, 'target': 23, 'iters': 1}, {'id': 53, 'source': 23, 'target': 50, 'iters': 1}, {'id': 54, 'source': 50, 'target': 12, 'iters': 1}, {'id': 55, 'source': 12, 'target': 40, 'iters': 1}, {'id': 56, 'source': 40, 'target': 3, 'iters': 1}, {'id': 57, 'source': 3, 'target': 12, 'iters': 1}, {'id': 58, 'source': 12, 'target': 26, 'iters': 1}, {'id': 59, 'source': 26, 'target': 47, 'iters': 1}, {'id': 60, 'source': 47, 'target': 18, 'iters': 1}, {'id': 61, 'source': 51, 'target': 54, 'iters': 1}, {'id': 62, 'source': 54, 'target': 48, 'iters': 1}, {'id': 63, 'source': 48, 'target': 35, 'iters': 1}, {'id': 64, 'source': 35, 'target': 0, 'iters': 1}, {'id': 65, 'source': 0, 'target': 32, 'iters': 1}, {'id': 66, 'source': 32, 'target': 11, 'iters': 1}, {'id': 67, 'source': 11, 'target': 49, 'iters': 1}, {'id': 68, 'source': 49, 'target': 33, 'iters': 1}, {'id': 69, 'source': 33, 'target': 40, 'iters': 1}, {'id': 70, 'source': 51, 'target': 21, 'iters': 1}, {'id': 71, 'source': 21, 'target': 14, 'iters': 1}, {'id': 72, 'source': 14, 'target': 22, 'iters': 1}, {'id': 73, 'source': 22, 'target': 6, 'iters': 1}, {'id': 74, 'source': 6, 'target': 4, 'iters': 1}, {'id': 75, 'source': 4, 'target': 18, 'iters': 1}, {'id': 76, 'source': 18, 'target': 39, 'iters': 1}, {'id': 77, 'source': 39, 'target': 8, 'iters': 1}, {'id': 78, 'source': 8, 'target': 13, 'iters': 1}, {'id': 79, 'source': 51, 'target': 7, 'iters': 1}, {'id': 80, 'source': 7, 'target': 53, 'iters': 1}, {'id': 81, 'source': 53, 'target': 20, 'iters': 1}, {'id': 82, 'source': 20, 'target': 49, 'iters': 1}, {'id': 83, 'source': 49, 'target': 53, 'iters': 1}, {'id': 84, 'source': 53, 'target': 5, 'iters': 1}, {'id': 85, 'source': 5, 'target': 48, 'iters': 1}, {'id': 86, 'source': 48, 'target': 36, 'iters': 1}, {'id': 87, 'source': 36, 'target': 30, 'iters': 1}]}
    elif pre_graph == 'hevea':
        topic_name = 'Hevea brasiliensis'
        network_json = {'nodes': [{'name': 'Potato', 'cluster': 4, 'inlinks': 5}, {'name': 'Hymenaea courbaril', 'cluster': 4, 'inlinks': 2}, {'name': 'Pachira aquatica', 'inlinks': 7}, {'name': 'Spondias mombin', 'inlinks': 10}, {'name': 'Anadenanthera peregrina var. falcata', 'inlinks': 9}, {'name': 'Avocado', 'inlinks': 4}, {'name': 'Hevea brasiliensis', 'inlinks': 8}, {'name': 'Pouteria caimito', 'inlinks': 5}, {'name': 'Ormosia nobilis', 'inlinks': 7}, {'name': 'Copernicia prunifera', 'inlinks': 1}, {'name': 'Passiflora edulis', 'inlinks': 8}, {'name': 'Heah Joo Seang', 'inlinks': 3}, {'name': 'Kielmeyera coriacea', 'inlinks': 9}, {'name': 'Clusia alata', 'inlinks': 3}, {'name': 'Tabebuia ochracea', 'inlinks': 9}], 'edges': [{'id': 0, 'source': 6, 'target': 2, 'iters': 2}, {'id': 1, 'source': 2, 'target': 3, 'iters': 2}, {'id': 2, 'source': 3, 'target': 0, 'iters': 1}, {'id': 3, 'source': 0, 'target': 2, 'iters': 1}, {'id': 4, 'source': 2, 'target': 8, 'iters': 1}, {'id': 5, 'source': 8, 'target': 14, 'iters': 4}, {'id': 6, 'source': 14, 'target': 3, 'iters': 3}, {'id': 7, 'source': 3, 'target': 12, 'iters': 2}, {'id': 8, 'source': 12, 'target': 3, 'iters': 1}, {'id': 9, 'source': 6, 'target': 5, 'iters': 3}, {'id': 10, 'source': 5, 'target': 2, 'iters': 2}, {'id': 11, 'source': 2, 'target': 5, 'iters': 1}, {'id': 12, 'source': 3, 'target': 14, 'iters': 2}, {'id': 13, 'source': 14, 'target': 10, 'iters': 1}, {'id': 14, 'source': 10, 'target': 6, 'iters': 2}, {'id': 15, 'source': 6, 'target': 10, 'iters': 2}, {'id': 16, 'source': 10, 'target': 1, 'iters': 1}, {'id': 17, 'source': 1, 'target': 0, 'iters': 1}, {'id': 18, 'source': 0, 'target': 13, 'iters': 1}, {'id': 19, 'source': 13, 'target': 7, 'iters': 2}, {'id': 20, 'source': 7, 'target': 0, 'iters': 1}, {'id': 21, 'source': 0, 'target': 6, 'iters': 1}, {'id': 22, 'source': 2, 'target': 13, 'iters': 1}, {'id': 23, 'source': 6, 'target': 4, 'iters': 5}, {'id': 24, 'source': 4, 'target': 13, 'iters': 1}, {'id': 25, 'source': 7, 'target': 4, 'iters': 3}, {'id': 26, 'source': 4, 'target': 12, 'iters': 1}, {'id': 27, 'source': 12, 'target': 6, 'iters': 2}, {'id': 28, 'source': 4, 'target': 10, 'iters': 3}, {'id': 29, 'source': 10, 'target': 11, 'iters': 2}, {'id': 30, 'source': 6, 'target': 0, 'iters': 1}, {'id': 31, 'source': 0, 'target': 1, 'iters': 1}, {'id': 32, 'source': 1, 'target': 12, 'iters': 1}, {'id': 33, 'source': 12, 'target': 2, 'iters': 1}, {'id': 34, 'source': 2, 'target': 10, 'iters': 2}, {'id': 35, 'source': 10, 'target': 12, 'iters': 1}, {'id': 36, 'source': 6, 'target': 14, 'iters': 1}, {'id': 37, 'source': 14, 'target': 8, 'iters': 2}, {'id': 38, 'source': 8, 'target': 12, 'iters': 1}, {'id': 39, 'source': 12, 'target': 8, 'iters': 1}, {'id': 40, 'source': 8, 'target': 7, 'iters': 1}, {'id': 41, 'source': 4, 'target': 6, 'iters': 2}, {'id': 42, 'source': 6, 'target': 12, 'iters': 2}, {'id': 43, 'source': 12, 'target': 14, 'iters': 2}, {'id': 44, 'source': 14, 'target': 12, 'iters': 1}, {'id': 45, 'source': 5, 'target': 6, 'iters': 1}, {'id': 46, 'source': 10, 'target': 3, 'iters': 1}, {'id': 47, 'source': 4, 'target': 11, 'iters': 1}, {'id': 48, 'source': 11, 'target': 9, 'iters': 1}, {'id': 49, 'source': 9, 'target': 3, 'iters': 1}, {'id': 50, 'source': 3, 'target': 8, 'iters': 1}, {'id': 51, 'source': 4, 'target': 7, 'iters': 1}, {'id': 52, 'source': 6, 'target': 8, 'iters': 1}, {'id': 53, 'source': 3, 'target': 2, 'iters': 1}, {'id': 54, 'source': 6, 'target': 3, 'iters': 1}, {'id': 55, 'source': 12, 'target': 4, 'iters': 1}, {'id': 56, 'source': 11, 'target': 0, 'iters': 1}, {'id': 57, 'source': 0, 'target': 7, 'iters': 1}, {'id': 58, 'source': 7, 'target': 8, 'iters': 1}, {'id': 59, 'source': 8, 'target': 3, 'iters': 1}]}
    else:
        paths, clusters = all.all('https://en.wikipedia.org/wiki/{}'.format(topic_name.replace(' ', '_')), downstream)
        network_json = to_json.store_paths(paths, clusters)

    return render_template('layout_network.html', **locals())

if __name__ == "__main__":
    app.run()
